import { CallOpts, SessionConnection } from './sessionConnection';
export declare enum FilesystemOperation {
    Create = "Create",
    Write = "Write",
    Remove = "Remove",
    Rename = "Rename",
    Chmod = "Chmod"
}
export interface FilesystemEvent {
    path: string;
    name: string;
    operation: FilesystemOperation;
    timestamp: number;
    isDir: boolean;
}
export type FilesystemEventListener = (event: FilesystemEvent) => void;
declare class FilesystemWatcher {
    private sessConn;
    private path;
    private listeners;
    private rpcSubscriptionID?;
    constructor(sessConn: SessionConnection, path: string);
    start(opts: CallOpts): Promise<void>;
    stop(): Promise<void>;
    addEventListener(l: FilesystemEventListener): () => boolean;
    private handleFilesystemEvents;
}
export default FilesystemWatcher;
