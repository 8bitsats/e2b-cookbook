{"version":3,"file":"index.js","sources":["../../src/constants.ts","../../src/api/index.ts","../../src/utils/id.ts","../../src/error.ts","../../src/utils/promise.ts","../../src/session/codeSnippet.ts","../../src/session/filesystem.ts","../../src/session/filesystemWatcher.ts","../../src/session/process.ts","../../src/utils/wait.ts","../../src/session/sessionConnection.ts","../../src/session/terminal.ts","../../src/session/index.ts","../../src/runCode.ts"],"sourcesContent":["export const SESSION_REFRESH_PERIOD = 5_000 // 5s\nexport const WS_RECONNECT_INTERVAL = 600 // 600ms\n\nexport const TIMEOUT = 60_000 // 60s\n\nexport const SESSION_DOMAIN = 'ondevbook.com'\nexport const WS_PORT = 49982\nexport const WS_ROUTE = '/ws'\n","import 'cross-fetch/polyfill'\nimport { Fetcher } from 'openapi-typescript-fetch'\nimport platform from 'platform'\n\nimport { SESSION_DOMAIN } from '../constants'\nimport type { components, paths } from './schema.gen'\n\nconst client = Fetcher.for<paths>()\n\nclient.configure({\n  baseUrl: `https://${SESSION_DOMAIN}`,\n  init: {\n    headers: {\n      package_version: '__pkgVersion__',\n      lang: 'js',\n      engine: platform.name || 'unknown',\n      lang_version: platform.version || 'unknown',\n      system: platform.os?.family || 'unknown',\n      publisher: 'e2b',\n    },\n  },\n})\n\ntype ClientType = typeof client\n\nexport default client\nexport type { components, paths, ClientType }\n","export function id(length: number) {\n  let result = ''\n  const characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n  const charactersLength = characters.length\n  for (let i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength))\n  }\n  return result\n}\n","export class TimeoutError extends Error {\n  constructor(message: any) {\n    super(message)\n    this.name = 'TimeoutError'\n  }\n}\n\nexport class AuthenticationError extends Error {\n  constructor(message: any) {\n    super(message)\n    this.name = 'AuthenticationError'\n  }\n}\n","import { TIMEOUT } from '../constants'\nimport { TimeoutError } from '../error'\n\nexport function assertFulfilled<T>(\n  item: PromiseSettledResult<T>,\n): item is PromiseFulfilledResult<T> {\n  return item.status === 'fulfilled'\n}\n\nexport function assertRejected<T>(\n  item: PromiseSettledResult<T>,\n): item is PromiseRejectedResult {\n  return item.status === 'rejected'\n}\n\nexport function formatSettledErrors<T>(settled: PromiseSettledResult<T>[]) {\n  if (settled.every(s => s.status === 'fulfilled')) return\n\n  return settled.reduce((prev, curr, i) => {\n    if (curr.status === 'rejected') {\n      return prev + '\\n' + `[${i}]: ` + `${JSON.stringify(curr)}`\n    }\n    return prev\n  }, 'errors:\\n')\n}\n\nexport function createDeferredPromise<T = void>() {\n  let resolve: (value: T) => void\n  let reject: (reason?: unknown) => void\n  const promise = new Promise<T>((res, rej) => {\n    resolve = res\n    reject = rej\n  })\n\n  return {\n    promise,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    reject: reject!,\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    resolve: resolve!,\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport function withTimeout<T extends (...args: any[]) => any>(\n  fn: T,\n  timeout: number = TIMEOUT,\n): T {\n  if (timeout === undefined || timeout <= 0 || timeout === Number.POSITIVE_INFINITY) {\n    return fn\n  }\n\n  let timerId: NodeJS.Timeout\n  const timer = new Promise((resolve, reject) => {\n    timerId = setTimeout(\n      () =>\n        reject(new TimeoutError(`Calling \"${fn.name}\" timeouted after ${timeout}ms.`)),\n      timeout,\n    )\n  })\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  return ((...args: T extends (...args: infer A) => any ? A : never) => {\n    const result = Promise.race([timer, fn(...args)])\n    result.finally(() => clearTimeout(timerId))\n    return result\n  }) as T\n}\n","export const codeSnippetService = 'codeSnippet'\n\nexport interface OpenPort {\n  state: string\n  ip: string\n  port: number\n}\n\nexport type ScanOpenedPortsHandler = (ports: OpenPort[]) => void\n","import FilesystemWatcher from './filesystemWatcher'\nimport { CallOpts } from './sessionConnection'\n\nexport const filesystemService = 'filesystem'\n\nexport interface FileInfo {\n  isDir: boolean\n  name: string\n}\n\nexport interface FilesystemManager {\n  readonly write: (path: string, content: string, opts?: CallOpts) => Promise<void>\n  readonly writeBytes: (path: string, content: Uint8Array) => Promise<void>\n  readonly read: (path: string, opts?: CallOpts) => Promise<string>\n  readonly readBytes: (path: string) => Promise<Uint8Array>\n  readonly remove: (path: string, opts?: CallOpts) => Promise<void>\n  readonly list: (path: string, opts?: CallOpts) => Promise<FileInfo[]>\n  readonly makeDir: (path: string, opts?: CallOpts) => Promise<void>\n  readonly watchDir: (path: string) => FilesystemWatcher\n}\n","import { withTimeout } from '../utils/promise'\nimport { filesystemService } from './filesystem'\nimport { CallOpts, SessionConnection } from './sessionConnection'\n\nexport enum FilesystemOperation {\n  Create = 'Create',\n  Write = 'Write',\n  Remove = 'Remove',\n  Rename = 'Rename',\n  Chmod = 'Chmod',\n}\n\nexport interface FilesystemEvent {\n  path: string\n  name: string\n  operation: FilesystemOperation\n  // Unix epoch in nanoseconds\n  timestamp: number\n  isDir: boolean\n}\n\nexport type FilesystemEventListener = (event: FilesystemEvent) => void\n\nclass FilesystemWatcher {\n  // Listeners to filesystem events.\n  // Users of the this class can add their listeners to filesystem events\n  // via `this.addEventListeners`\n  private listeners: Set<FilesystemEventListener>\n  private rpcSubscriptionID?: string\n\n  constructor(\n    private sessConn: SessionConnection,\n    private path: string,\n  ) {\n    this.listeners = new Set<FilesystemEventListener>()\n  }\n\n  // Starts watching the path that was passed to the contructor\n  async start(opts: CallOpts) {\n    const start = async () => {\n      // Already started.\n      if (this.rpcSubscriptionID) return\n\n      this.handleFilesystemEvents = this.handleFilesystemEvents.bind(this)\n\n      this.rpcSubscriptionID = await this.sessConn.subscribe(\n        filesystemService,\n        this.handleFilesystemEvents,\n        'watchDir',\n        this.path,\n      )\n    }\n    return await withTimeout(start, opts?.timeout)()\n  }\n\n  // Stops watching the path and removes all listeners.\n  async stop() {\n    this.listeners.clear()\n    if (this.rpcSubscriptionID) {\n      await this.sessConn.unsubscribe(this.rpcSubscriptionID)\n    }\n  }\n\n  addEventListener(l: FilesystemEventListener) {\n    this.listeners.add(l)\n    return () => this.listeners.delete(l)\n  }\n\n  private handleFilesystemEvents(fsChange: FilesystemEvent) {\n    this.listeners.forEach(l => {\n      l(fsChange)\n    })\n  }\n}\n\nexport default FilesystemWatcher\n","import { EnvVars } from './envVars'\nimport { CallOpts, SessionConnection } from './sessionConnection'\n\nexport const processService = 'process'\n\n/**\n * A message from a process.\n */\nexport class ProcessMessage {\n  constructor(\n    public readonly line: string,\n    /**\n     * Unix epoch in nanoseconds\n     */\n    public readonly timestamp: number,\n    public readonly error: boolean,\n  ) {\n    // eslint-disable-next-line prettier/prettier\n  }\n}\n\n/**\n * Output from a process.\n */\nexport class ProcessOutput {\n  private readonly delimiter = '\\n'\n  private readonly messages: ProcessMessage[] = []\n  private _error = false\n\n  /**\n   * Whether the process has errored.\n   */\n  get error(): boolean {\n    return this._error\n  }\n\n  /**\n   * The stdout from the process.\n   */\n  get stdout(): string {\n    return this.messages\n      .filter(out => !out.error)\n      .map(out => out.line)\n      .join(this.delimiter)\n  }\n\n  /**\n   * The stderr from the process.\n   */\n  get stderr(): string {\n    return this.messages\n      .filter(out => out.error)\n      .map(out => out.line)\n      .join(this.delimiter)\n  }\n\n  addStdout(message: ProcessMessage) {\n    this.insertByTimestamp(message)\n  }\n\n  addStderr(message: ProcessMessage) {\n    this._error = true\n    this.insertByTimestamp(message)\n  }\n\n  private insertByTimestamp(message: ProcessMessage) {\n    let i = this.messages.length - 1\n    while (i >= 0 && this.messages[i].timestamp > message.timestamp) {\n      i -= 1\n    }\n    this.messages.splice(i + 1, 0, message)\n  }\n}\n\n/**\n * A process running in the environment.\n */\nexport class Process {\n  constructor(\n    readonly processID: string,\n    private readonly session: SessionConnection,\n    private readonly triggerExit: () => void,\n    readonly finished: Promise<ProcessOutput>,\n    readonly output: ProcessOutput,\n  ) {}\n\n  /**\n   * Kills the process.\n   */\n  async kill(): Promise<void> {\n    try {\n      await this.session.call(processService, 'kill', [this.processID])\n    } finally {\n      this.triggerExit()\n      await this.finished\n    }\n  }\n\n  /**\n   * Sends data to the process stdin.\n   *\n   * @param data Data to send\n   * @param opts Call options\n   * @param {timeout} [opts.timeout] Timeout in milliseconds (default is 60 seconds)\n   */\n  async sendStdin(data: string, opts?: CallOpts): Promise<void> {\n    await this.session.call(processService, 'stdin', [this.processID, data], opts)\n  }\n}\nexport interface ProcessOpts {\n  cmd: string\n  onStdout?: (out: ProcessMessage) => void\n  onStderr?: (out: ProcessMessage) => void\n  onExit?: () => void\n  envVars?: EnvVars\n  cwd?: string\n  /** @deprecated use cwd instead */\n  rootDir?: string\n  processID?: string\n  timeout?: number\n}\n\nexport interface ProcessManager {\n  readonly start: (opts: ProcessOpts) => Promise<Process>\n}\n","function wait(ms: number) {\n  return new Promise(resolve => setTimeout(resolve, ms))\n}\n\nexport default wait\n","import { IRpcNotification, RpcWebSocketClient } from 'rpc-websocket-client'\n\nimport api, { components } from '../api'\nimport {\n  SESSION_DOMAIN,\n  SESSION_REFRESH_PERIOD,\n  WS_PORT,\n  WS_RECONNECT_INTERVAL,\n  WS_ROUTE,\n} from '../constants'\nimport { AuthenticationError } from '../error'\nimport { assertFulfilled, formatSettledErrors, withTimeout } from '../utils/promise'\nimport wait from '../utils/wait'\nimport { codeSnippetService } from './codeSnippet'\nimport { filesystemService } from './filesystem'\nimport { processService } from './process'\nimport { terminalService } from './terminal'\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ntype SubscriptionHandler = (result: any) => void\n\ntype Service =\n  | typeof processService\n  | typeof codeSnippetService\n  | typeof filesystemService\n  | typeof terminalService\n\ninterface Subscriber {\n  service: Service\n  subID: string\n  handler: SubscriptionHandler\n}\n\ninterface Logger {\n  debug?: (message: string, ...args: unknown[]) => void\n  info?: (message: string, ...args: unknown[]) => void\n  warn?: (message: string, ...args: unknown[]) => void\n  error?: (message: string, ...args: unknown[]) => void\n}\n\nexport interface SessionConnectionOpts {\n  id: string\n  apiKey?: string\n  cwd?: string\n  logger?: Logger\n  __debug_hostname?: string\n  __debug_port?: number\n  __debug_devEnv?: 'remote' | 'local'\n}\n\nexport interface CallOpts {\n  timeout?: number\n}\n\nconst createSession = api.path('/sessions').method('post').create({ api_key: true })\nconst refreshSession = api\n  .path('/sessions/{sessionID}/refresh')\n  .method('post')\n  .create({ api_key: true })\n\nexport class SessionConnection {\n  protected readonly logger: Logger\n  protected session?: components['schemas']['Session']\n  protected isOpen = false\n\n  private readonly apiKey: string\n  private readonly rpc = new RpcWebSocketClient()\n  private subscribers: Subscriber[] = []\n\n  // let's keep opts readonly, but public – for convenience, mainly when debugging\n  constructor(readonly opts: SessionConnectionOpts) {\n    const apiKey = opts.apiKey || process.env.E2B_API_KEY\n    if (!apiKey) {\n      throw new AuthenticationError(\n        'API key is required, please visit https://e2b.dev/docs to get your API key',\n      )\n    }\n    this.apiKey = apiKey\n    this.logger = opts.logger ?? {\n      // by default, we log to the console\n      // we don't log debug messages by default\n      info: console.info,\n      warn: console.warn,\n      error: console.error,\n    }\n    this.logger.info?.(`Session \"${opts.id}\" initialized`)\n  }\n\n  /**\n   * Get the hostname for the session or for the specified session's port.\n   *\n   * `getHostname` method requires `this` context - you may need to bind it.\n   *\n   * @param port Specify if you want to connect to a specific port of the session\n   * @returns Hostname of the session or session's port\n   */\n  getHostname(port?: number) {\n    if (this.opts.__debug_hostname) {\n      // Debugging remotely (with GitPod) and on local needs different formats of the hostname.\n      if (port && this.opts.__debug_devEnv === 'remote') {\n        return `${port}-${this.opts.__debug_hostname}`\n      } else if (port) {\n        return `${this.opts.__debug_hostname}:${port}`\n      } else {\n        return this.opts.__debug_hostname\n      }\n    }\n\n    if (!this.session) {\n      return undefined\n    }\n\n    const hostname = `${this.session.sessionID}-${this.session.clientID}.${SESSION_DOMAIN}`\n    if (port) {\n      return `${port}-${hostname}`\n    } else {\n      return hostname\n    }\n  }\n\n  /**\n   * Close the connection to the session\n   *\n   * `close` method requires `this` context - you may need to bind it.\n   */\n  async close() {\n    if (this.isOpen) {\n      this.logger.debug?.(`Closing session \"${this.session?.sessionID}\"`)\n      this.isOpen = false\n\n      this.logger.debug?.('Unsubscribing...')\n      const results = await Promise.allSettled(\n        this.subscribers.map(s => this.unsubscribe(s.subID)),\n      )\n      results.forEach(r => {\n        if (r.status === 'rejected') {\n          this.logger.warn?.(`Failed to unsubscribe: \"${r.reason}\"`)\n        }\n      })\n\n      // This is `ws` way of closing connection\n      this.rpc.ws?.terminate?.()\n      // This is the browser WebSocket way of closing connection\n      this.rpc.ws?.close?.()\n      this.logger.info?.('Disconnected from the session')\n    }\n  }\n\n  /**\n   * Open a connection to a new session\n   *\n   * `open` method requires `this` context - you may need to bind it.\n   * @param opts Call options\n   * @param {timeout} [opts.timeout] Timeout in milliseconds (default is 60 seconds)\n   */\n  async open(opts: CallOpts) {\n    const open = async () => {\n      if (this.isOpen || !!this.session) {\n        throw new Error('Session connect was already called')\n      } else {\n        this.isOpen = true\n      }\n      this.logger.debug?.('Opening session...')\n\n      if (!this.opts.__debug_hostname) {\n        try {\n          const res = await createSession({\n            api_key: this.apiKey,\n            codeSnippetID: this.opts.id,\n            editEnabled: false,\n          })\n          this.session = res.data\n          this.logger.debug?.(`Acquired session \"${this.session.sessionID}\"`)\n\n          this.refresh(this.session.sessionID)\n        } catch (e) {\n          if (e instanceof createSession.Error) {\n            const error = e.getActualType()\n            if (error.status === 400) {\n              throw new Error(\n                `Error creating session - (${error.status}) bad request: ${error.data.message}`,\n              )\n            }\n            if (error.status === 401) {\n              throw new Error(\n                `Error creating session - (${error.status}) unauthenticated: ${error.data.message}`,\n              )\n            }\n            if (error.status === 500) {\n              throw new Error(\n                `Error creating session - (${error.status}) server error: ${error.data.message}`,\n              )\n            }\n          }\n          throw e\n        }\n      }\n\n      const hostname = this.getHostname(this.opts.__debug_port || WS_PORT)\n\n      if (!hostname) {\n        throw new Error(\"Cannot get session's hostname\")\n      }\n\n      const protocol = this.opts.__debug_devEnv === 'local' ? 'ws' : 'wss'\n      const sessionURL = `${protocol}://${hostname}${WS_ROUTE}`\n\n      this.rpc.onError(err => {\n        // not warn, because this is somewhat expected behaviour during initialization\n        this.logger.debug?.(\n          `Error in WS session \"${this.session?.sessionID}\": ${\n            err.message ?? err.code ?? err.toString()\n          }. Trying to reconnect...`,\n        )\n      })\n\n      let isFinished = false\n      let resolveOpening: (() => void) | undefined\n      let rejectOpening: (() => void) | undefined\n\n      const openingPromise = new Promise<void>((resolve, reject) => {\n        resolveOpening = () => {\n          if (isFinished) return\n          isFinished = true\n          resolve()\n        }\n        rejectOpening = () => {\n          if (isFinished) return\n          isFinished = true\n          reject()\n        }\n      })\n\n      this.rpc.onOpen(() => {\n        this.logger.debug?.(`Connected to session \"${this.session?.sessionID}\"`)\n        resolveOpening?.()\n      })\n\n      this.rpc.onClose(async () => {\n        this.logger.debug?.(\n          `Closing WS connection to session \"${this.session?.sessionID}\"`,\n        )\n        if (this.isOpen) {\n          await wait(WS_RECONNECT_INTERVAL)\n          this.logger.debug?.(`Reconnecting to session \"${this.session?.sessionID}\"`)\n          try {\n            // When the WS connection closes the subscribers in devbookd are removed.\n            // We want to delete the subscriber handlers here so there are no orphans.\n            this.subscribers = []\n            await this.rpc.connect(sessionURL)\n            this.logger.debug?.(`Reconnected to session \"${this.session?.sessionID}\"`)\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          } catch (err: any) {\n            // not warn, because this is somewhat expected behaviour during initialization\n            this.logger.debug?.(\n              `Failed reconnecting to session \"${this.session?.sessionID}\": ${\n                err.message ?? err.code ?? err.toString()\n              }`,\n            )\n          }\n        } else {\n          rejectOpening?.()\n        }\n      })\n\n      this.rpc.onNotification.push(this.handleNotification.bind(this))\n\n      try {\n        this.logger.debug?.(`Connection to session \"${this.session?.sessionID}\"`)\n        await this.rpc.connect(sessionURL)\n\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      } catch (err: any) {\n        // not warn, because this is somewhat expected behaviour during initialization\n        this.logger.debug?.(\n          `Error connecting to session \"${this.session?.sessionID}\": ${\n            err.message ?? err.code ?? err.toString()\n          }`,\n        )\n      }\n\n      await openingPromise\n      return this\n    }\n    return await withTimeout(open, opts?.timeout)()\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  async call(service: Service, method: string, params?: any[], opts?: CallOpts) {\n    this.logger.debug?.(`Calling \"${service}_${method}\" with params:`, params)\n\n    // Without the async function, the `this` context is lost.\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const call = async (method: string, params?: any[]) =>\n      await this.rpc.call(method, params)\n\n    return await withTimeout(call, opts?.timeout)(`${service}_${method}`, params)\n  }\n\n  async handleSubscriptions<\n    T extends (ReturnType<SessionConnection['subscribe']> | undefined)[],\n  >(\n    ...subs: T\n  ): Promise<{\n    [P in keyof T]: Awaited<T[P]>\n  }> {\n    const results = await Promise.allSettled(subs)\n\n    if (results.every(r => r.status === 'fulfilled')) {\n      return results.map(r => (r.status === 'fulfilled' ? r.value : undefined)) as {\n        [P in keyof T]: Awaited<T[P]>\n      }\n    }\n\n    await Promise.all(\n      results\n        .filter(assertFulfilled)\n        .map(r => (r.value ? this.unsubscribe(r.value) : undefined)),\n    )\n\n    throw new Error(formatSettledErrors(results))\n  }\n\n  // eslint-disable-next-line @typescript-eslint/member-ordering\n  async unsubscribe(subID: string) {\n    const subscription = this.subscribers.find(s => s.subID === subID)\n    if (!subscription) return\n\n    await this.call(subscription.service, 'unsubscribe', [subscription.subID])\n\n    this.subscribers = this.subscribers.filter(s => s !== subscription)\n    this.logger.debug?.(`Unsubscribed '${subID}' from '${subscription.service}'`)\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any,@typescript-eslint/member-ordering\n  async subscribe(\n    service: Service,\n    handler: SubscriptionHandler,\n    method: string,\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ...params: any[]\n  ) {\n    const subID = await this.call(service, 'subscribe', [method, ...params])\n\n    if (typeof subID !== 'string') {\n      throw new Error(\n        // eslint-disable-next-line prettier/prettier\n        `Cannot subscribe to ${service}_${method}${\n          params.length > 0 ? ' with params [' + params.join(', ') + ']' : ''\n        }. Expected response should have been a subscription ID, instead we got ${JSON.stringify(\n          subID,\n        )}`,\n      )\n    }\n\n    this.subscribers.push({\n      handler,\n      service,\n      subID,\n    })\n    this.logger.debug?.(\n      // eslint-disable-next-line prettier/prettier\n      `Subscribed to \"${service}_${method}\"${\n        params.length > 0 ? ' with params [' + params.join(', ') + '] and' : ''\n      } with id \"${subID}\"`,\n    )\n\n    return subID\n  }\n\n  private handleNotification(data: IRpcNotification) {\n    this.logger.debug?.('Handling notification:', data)\n    this.subscribers\n      .filter(s => s.subID === data.params?.subscription)\n      .forEach(s => s.handler(data.params?.result))\n  }\n\n  private async refresh(sessionID: string) {\n    this.logger.debug?.(`Started refreshing session \"${sessionID}\"`)\n\n    try {\n      // eslint-disable-next-line no-constant-condition\n      while (true) {\n        if (!this.isOpen) {\n          this.logger.debug?.(\n            `Cannot refresh session ${this.session?.sessionID} - it was closed`,\n          )\n          return\n        }\n\n        await wait(SESSION_REFRESH_PERIOD)\n\n        try {\n          this.logger.debug?.(`Refreshed session \"${sessionID}\"`)\n          await refreshSession({\n            api_key: this.apiKey,\n            sessionID,\n          })\n        } catch (e) {\n          if (e instanceof refreshSession.Error) {\n            const error = e.getActualType()\n            if (error.status === 404) {\n              this.logger.warn?.(\n                `Error refreshing session - (${error.status}): ${error.data.message}`,\n              )\n              return\n            }\n            this.logger.warn?.(\n              `Refreshing session \"${sessionID}\" failed - (${error.status})`,\n            )\n          }\n        }\n      }\n    } finally {\n      this.logger.debug?.(`Stopped refreshing session \"${sessionID}\"`)\n      await this.close()\n    }\n  }\n}\n","import { EnvVars } from './envVars'\nimport { SessionConnection } from './sessionConnection'\n\nexport const terminalService = 'terminal'\n\nexport class TerminalOutput {\n  private _data = ''\n\n  get data() {\n    return this._data\n  }\n\n  addData(data: string) {\n    this._data += data\n  }\n}\n\n/**\n * A terminal session running in the environment.\n */\nexport class Terminal {\n  constructor(\n    readonly terminalID: string,\n    private readonly session: SessionConnection,\n    private readonly triggerExit: () => void,\n    readonly finished: Promise<TerminalOutput>,\n    readonly output: TerminalOutput,\n  ) {}\n\n  get data() {\n    return this.output.data\n  }\n\n  /**\n   * Kills the terminal session.\n   */\n  async kill(): Promise<void> {\n    try {\n      // TODO: Change the \"destroy\" to \"kill\" in devbookd\n      await this.session.call(terminalService, 'destroy', [this.terminalID])\n    } finally {\n      this.triggerExit()\n      await this.finished\n    }\n  }\n\n  /**\n   * Sends data to the terminal standard input.\n   *\n   * @param data Data to send\n   */\n  async sendData(data: string): Promise<void> {\n    await this.session.call(terminalService, 'data', [this.terminalID, data])\n  }\n\n  /**\n   * Resizes the terminal tty.\n   *\n   * @param cols Number of columns\n   * @param rows Number of rows\n   */\n  async resize({ cols, rows }: { cols: number; rows: number }): Promise<void> {\n    await this.session.call(terminalService, 'resize', [this.terminalID, cols, rows])\n  }\n}\n\nexport type TerminalOpts = {\n  onData: (data: string) => void\n  onExit?: () => void\n  size: { cols: number; rows: number }\n  terminalID?: string\n  /**\n   * If the `cmd` parameter is defined it will be executed as a command\n   * and this terminal session will exit when the command exits.\n   */\n  cmd?: string\n  /**\n   * Working directory where will the terminal start.\n   */\n  cwd?: string\n  /**\n   * @deprecated use cwd instead\n   */\n  rootDir?: string\n  /**\n   * Environment variables that will be accessible inside of the terminal.\n   */\n  envVars?: EnvVars\n  /**\n   * Timeout in milliseconds (default is 60 seconds)\n   */\n  timeout?: number\n}\n\nexport interface TerminalManager {\n  readonly start: (opts: TerminalOpts) => Promise<Terminal>\n}\n","import normalizePath from 'normalize-path'\n\nimport { components } from '../api'\nimport { id } from '../utils/id'\nimport { createDeferredPromise, formatSettledErrors, withTimeout } from '../utils/promise'\nimport {\n  codeSnippetService,\n  ScanOpenedPortsHandler as ScanOpenPortsHandler,\n} from './codeSnippet'\nimport { FileInfo, FilesystemManager, filesystemService } from './filesystem'\nimport FilesystemWatcher from './filesystemWatcher'\nimport {\n  Process,\n  ProcessManager,\n  ProcessMessage,\n  ProcessOpts,\n  ProcessOutput,\n  processService,\n} from './process'\nimport { CallOpts, SessionConnection, SessionConnectionOpts } from './sessionConnection'\nimport {\n  Terminal,\n  TerminalManager,\n  TerminalOpts,\n  TerminalOutput,\n  terminalService,\n} from './terminal'\n\nexport type Environment = components['schemas']['Template']\n\nexport interface SessionOpts extends SessionConnectionOpts {\n  onScanPorts?: ScanOpenPortsHandler\n  timeout?: number\n}\n\nexport class Session extends SessionConnection {\n  readonly terminal: TerminalManager\n  readonly filesystem: FilesystemManager\n  readonly process: ProcessManager\n\n  private onScanPorts?: ScanOpenPortsHandler\n\n  constructor(opts: SessionOpts) {\n    super(opts)\n    this.onScanPorts = opts.onScanPorts\n\n    // Init Filesystem handler\n    this.filesystem = {\n      /**\n       * List files in a directory.\n       * @param path Path to a directory\n       * @param opts Call options\n       * @param {timeout} [opts.timeout] Timeout in milliseconds (default is 60 seconds)\n       * @returns Array of files in a directory\n       */\n      list: async (path, opts?: CallOpts) => {\n        return (await this.call(filesystemService, 'list', [path], opts)) as FileInfo[]\n      },\n      /**\n       * Reads the whole content of a file.\n       * @param path Path to a file\n       * @param opts Call options\n       * @param {timeout} [opts.timeout] Timeout in milliseconds (default is 60 seconds)\n       * @returns Content of a file\n       */\n      read: async (path, opts?: CallOpts) => {\n        return (await this.call(filesystemService, 'read', [path], opts)) as string\n      },\n      /**\n       * Removes a file or a directory.\n       * @param path Path to a file or a directory\n       * @param opts Call options\n       * @param {timeout} [opts.timeout] Timeout in milliseconds (default is 60 seconds)\n       */\n      remove: async (path, opts?: CallOpts) => {\n        await this.call(filesystemService, 'remove', [path], opts)\n      },\n      /**\n       * Writes content to a new file on path.\n       * @param path Path to a new file. For example '/dirA/dirB/newFile.txt' when creating 'newFile.txt'\n       * @param content Content to write to a new file\n       * @param opts Call options\n       * @param {timeout} [opts.timeout] Timeout in milliseconds (default is 60 seconds)\n       */\n      write: async (path, content, opts?: CallOpts) => {\n        await this.call(filesystemService, 'write', [path, content], opts)\n      },\n      /**\n       * Write array of bytes to a file.\n       * This can be used when you cannot represent the data as an UTF-8 string.\n       *\n       * @param path path to a file\n       * @param content byte array representing the content to write\n       */\n      writeBytes: async (path: string, content: Uint8Array) => {\n        // We need to convert the byte array to base64 string without using browser or node specific APIs.\n        // This should be achieved by the node polyfills.\n        const base64Content = Buffer.from(content).toString('base64')\n        await this.call(filesystemService, 'writeBase64', [path, base64Content])\n      },\n      /**\n       * Reads the whole content of a file as an array of bytes.\n       * @param path path to a file\n       * @returns byte array representing the content of a file\n       */\n      readBytes: async (path: string) => {\n        const base64Content = (await this.call(filesystemService, 'readBase64', [\n          path,\n        ])) as string\n        // We need to convert the byte array to base64 string without using browser or node specific APIs.\n        // This should be achieved by the node polyfills.\n        return Buffer.from(base64Content, 'base64')\n      },\n      /**\n       * Creates a new directory and all directories along the way if needed on the specified pth.\n       * @param path Path to a new directory. For example '/dirA/dirB' when creating 'dirB'.\n       * @param opts Call options\n       * @param {timeout} [opts.timeout] Timeout in milliseconds (default is 60 seconds)\n       */\n      makeDir: async (path, opts?: CallOpts) => {\n        await this.call(filesystemService, 'makeDir', [path], opts)\n      },\n      /**\n       * Watches directory for filesystem events.\n       * @param path Path to a directory that will be watched\n       * @returns New watcher\n       */\n      watchDir: (path: string) => {\n        this.logger.debug?.(`Watching directory \"${path}\"`)\n        const npath = normalizePath(path)\n        return new FilesystemWatcher(this, npath)\n      },\n    }\n\n    // Init Terminal handler\n    this.terminal = {\n      start: async ({\n        onData,\n        size,\n        onExit,\n        envVars,\n        cmd,\n        cwd = '',\n        terminalID = id(12),\n        timeout = undefined,\n      }: TerminalOpts) => {\n        const start = async ({\n          onData,\n          size,\n          onExit,\n          envVars,\n          cmd,\n          cwd = '',\n          rootDir,\n          terminalID = id(12),\n        }: Omit<TerminalOpts, 'timeout'>) => {\n          this.logger.debug?.(`Starting terminal \"${terminalID}\"`)\n          if (!cwd && rootDir) {\n            this.logger.warn?.('The rootDir parameter is deprecated, use cwd instead.')\n            cwd = rootDir\n          }\n          if (!cwd && this.opts.cwd) {\n            cwd = this.opts.cwd\n          }\n          const { promise: terminalExited, resolve: triggerExit } =\n            createDeferredPromise()\n\n          const output = new TerminalOutput()\n\n          function handleData(data: string) {\n            output.addData(data)\n            onData?.(data)\n          }\n\n          const [onDataSubID, onExitSubID] = await this.handleSubscriptions(\n            this.subscribe(terminalService, handleData, 'onData', terminalID),\n            this.subscribe(terminalService, triggerExit, 'onExit', terminalID),\n          )\n\n          const { promise: unsubscribing, resolve: handleFinishUnsubscribing } =\n            createDeferredPromise<TerminalOutput>()\n\n          terminalExited.then(async () => {\n            const results = await Promise.allSettled([\n              this.unsubscribe(onExitSubID),\n              this.unsubscribe(onDataSubID),\n            ])\n            this.logger.debug?.(`Terminal \"${terminalID}\" exited`)\n\n            const errMsg = formatSettledErrors(results)\n            if (errMsg) {\n              this.logger.error?.(errMsg)\n            }\n\n            onExit?.()\n            handleFinishUnsubscribing(output)\n          })\n\n          try {\n            await this.call(terminalService, 'start', [\n              terminalID,\n              size.cols,\n              size.rows,\n              // Handle optional args for old devbookd compatibility\n              ...(cmd !== undefined ? [envVars, cmd, cwd] : []),\n            ])\n          } catch (err) {\n            triggerExit()\n            await unsubscribing\n            throw err\n          }\n\n          return new Terminal(terminalID, this, triggerExit, unsubscribing, output)\n        }\n        return await withTimeout(\n          start,\n          timeout,\n        )({\n          onData,\n          size,\n          onExit,\n          envVars,\n          cmd,\n          cwd,\n          terminalID,\n        })\n      },\n    }\n\n    // Init Process handler\n    this.process = {\n      start: async (opts: ProcessOpts) => {\n        const start = async ({\n          cmd,\n          onStdout,\n          onStderr,\n          onExit,\n          envVars = {},\n          cwd = '',\n          rootDir,\n          processID = id(12),\n        }: Omit<ProcessOpts, 'timeout'>) => {\n          if (!cwd && rootDir) {\n            this.logger.warn?.('The rootDir parameter is deprecated, use cwd instead.')\n            cwd = rootDir\n          }\n          if (!cwd && this.opts.cwd) {\n            cwd = this.opts.cwd\n          }\n          if (!cmd) throw new Error('cmd is required')\n          this.logger.debug?.(`Starting process \"${processID}\", cmd: \"${cmd}\"`)\n\n          const { promise: processExited, resolve: triggerExit } = createDeferredPromise()\n\n          const output = new ProcessOutput()\n\n          function handleStdout(data: { line: string; timestamp: number }) {\n            const message = new ProcessMessage(data.line, data.timestamp, false)\n            output.addStdout(message)\n            onStdout?.(message)\n          }\n\n          function handleStderr(data: { line: string; timestamp: number }) {\n            const message = new ProcessMessage(data.line, data.timestamp, true)\n            output.addStderr(message)\n            onStderr?.(message)\n          }\n\n          const [onExitSubID, onStdoutSubID, onStderrSubID] =\n            await this.handleSubscriptions(\n              this.subscribe(processService, triggerExit, 'onExit', processID),\n              this.subscribe(processService, handleStdout, 'onStdout', processID),\n              this.subscribe(processService, handleStderr, 'onStderr', processID),\n            )\n\n          const { promise: unsubscribing, resolve: handleFinishUnsubscribing } =\n            createDeferredPromise<ProcessOutput>()\n\n          processExited.then(async () => {\n            const results = await Promise.allSettled([\n              this.unsubscribe(onExitSubID),\n              onStdoutSubID ? this.unsubscribe(onStdoutSubID) : undefined,\n              onStderrSubID ? this.unsubscribe(onStderrSubID) : undefined,\n            ])\n            this.logger.debug?.(`Process \"${processID}\" exited`)\n\n            const errMsg = formatSettledErrors(results)\n            if (errMsg) {\n              this.logger.error?.(errMsg)\n            }\n\n            onExit?.()\n            handleFinishUnsubscribing(output)\n          })\n\n          try {\n            await this.call(processService, 'start', [processID, cmd, envVars, cwd])\n          } catch (err) {\n            triggerExit()\n            await unsubscribing\n            throw err\n          }\n\n          return new Process(processID, this, triggerExit, unsubscribing, output)\n        }\n        const timeout = opts.timeout\n        return await withTimeout(start, timeout)(opts)\n      },\n    }\n  }\n\n  static async create(opts: SessionOpts) {\n    return new Session(opts).open({ timeout: opts?.timeout }).then(async session => {\n      if (opts.cwd) {\n        console.log(`Custom cwd for Session set: \"${opts.cwd}\"`)\n        await session.filesystem.makeDir(opts.cwd)\n      }\n      return session\n    })\n  }\n\n  override async open(opts: CallOpts) {\n    await super.open(opts)\n\n    const portsHandler = this.onScanPorts\n      ? (ports: { State: string; Ip: string; Port: number }[]) =>\n          this.onScanPorts?.(ports.map(p => ({ ip: p.Ip, port: p.Port, state: p.State })))\n      : undefined\n\n    await this.handleSubscriptions(\n      portsHandler\n        ? this.subscribe(codeSnippetService, portsHandler, 'scanOpenedPorts')\n        : undefined,\n    )\n\n    return this\n  }\n}\n","import { Session } from './session'\n\nexport enum CodeRuntime {\n  Node16 = 'Node16',\n  Python3 = 'Python3',\n}\n\n/**\n * Run code in a sandboxed cloud playground.\n * `runCode` wraps the `Session` class and provides a simple interface for running code in a sandboxed environment\n * without any need to manage lifecycle of the session.\n * `runCode` automatically loads the E2B API key from the `E2B_API_KEY` environment variable.\n *\n * @param runtime The runtime to use when running the code. Can be one of the following:\n * - \"Node16\"\n * - \"Python3\"\n *\n * **Let us know if you need support for other runtimes.**\n * @param code The code to run\n * @param opts Optional parameters to pass\n * @returns\n */\nexport async function runCode(\n  runtime: CodeRuntime,\n  code: string,\n  opts?: { apiKey?: string },\n) {\n  let binary = ''\n  let filepath = ''\n  let envID = ''\n  switch (runtime) {\n    case CodeRuntime.Node16:\n      envID = 'Nodejs'\n      binary = 'node'\n      filepath = '/index.js'\n      break\n    case CodeRuntime.Python3:\n      envID = 'Python3'\n      binary = 'python3'\n      filepath = '/main.py'\n      break\n    default:\n      throw new Error(\n        `The \"${runtime}\" runtime isn't supported. Please contact us (hello@e2b.dev) if you need support for this runtime`,\n      )\n  }\n\n  const session = await Session.create({\n    id: envID,\n    apiKey: opts?.apiKey || process.env.E2B_API_KEY || '', // Session.create will throw an error if the API key is not provided so no need to check here\n  })\n\n  await session.filesystem.write(filepath, code)\n\n  const codeProc = await session.process.start({\n    cmd: `${binary} ${filepath}`,\n  })\n  const out = await codeProc.finished\n\n  await session.close()\n\n  return {\n    stdout: out.stdout,\n    stderr: out.stderr,\n  }\n}\n"],"names":["api"],"mappings":"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"}