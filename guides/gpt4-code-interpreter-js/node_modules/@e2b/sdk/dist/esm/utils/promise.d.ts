export declare function assertFulfilled<T>(item: PromiseSettledResult<T>): item is PromiseFulfilledResult<T>;
export declare function assertRejected<T>(item: PromiseSettledResult<T>): item is PromiseRejectedResult;
export declare function formatSettledErrors<T>(settled: PromiseSettledResult<T>[]): string | undefined;
export declare function createDeferredPromise<T = void>(): {
    promise: Promise<T>;
    reject: (reason?: unknown) => void;
    resolve: (value: T) => void;
};
export declare function withTimeout<T extends (...args: any[]) => any>(fn: T, timeout?: number): T;
