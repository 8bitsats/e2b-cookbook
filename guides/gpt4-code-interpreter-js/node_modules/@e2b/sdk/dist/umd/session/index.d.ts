import { components } from '../api';
import { ScanOpenedPortsHandler as ScanOpenPortsHandler } from './codeSnippet';
import { FilesystemManager } from './filesystem';
import { ProcessManager } from './process';
import { CallOpts, SessionConnection, SessionConnectionOpts } from './sessionConnection';
import { TerminalManager } from './terminal';
export type Environment = components['schemas']['Template'];
export interface SessionOpts extends SessionConnectionOpts {
    onScanPorts?: ScanOpenPortsHandler;
    timeout?: number;
}
export declare class Session extends SessionConnection {
    readonly terminal: TerminalManager;
    readonly filesystem: FilesystemManager;
    readonly process: ProcessManager;
    private onScanPorts?;
    constructor(opts: SessionOpts);
    static create(opts: SessionOpts): Promise<Session>;
    open(opts: CallOpts): Promise<this>;
}
